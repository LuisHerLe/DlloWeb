- JS: Lenguaje basado en funciones
- ECMAScript: lenguaje de programación publicado por ECMA International, que es el que define el comportamiento, las funcionalidades, las formas de trabajar y todo lo relacionado con el lenguaje. 
	http://www.ecma-international.org/publications/standards/Ecma-262.htm
	- Creado por Brenda Eich
	- Fue anunciado oficialmente en 1996 con una especificación llamada ECMA-262
- Diferencia entre minusculas y mayusculas	
- Palabras reservadas:
	- https://developer.mozilla.org/es/docs/Web/JavaScript/Referencia/Palabras_Reservadas
*****::::: Diccionario de datos :::::*****
* Navegador: navigator (Objeto)
* DOM: document (Objeto)
* Ventana del navegador: window (Objeto)
* Evento: Acción que ejecuta el usuario (Ek: Dar un click)
* Algoritmo:  Seguir un conjunto de pasos para llegar a una solución // Grupo finito de operaciones organizadas de manera lógica y ordenada que permite solucionar un determinado problema.


* Variable: Contenedor que almacena valores de tipo numérico o de tipo texto.
* Debilmente tipado: Una variable puede almacenar al inicio del código un número y a medida que se va recorriendo el script de esta variable, esta puede almacenar texto sin necesidad de convertir el tipo de valor.
* Declaración de variables: Declarar una variable es decirle a la máquina que voy a tener una variable con un nombre determinado, esto se hace: 
	var nombre_variable;
* Métodos: Son los procesos que se utilizan para operar o transformar las variables para obtener resultados (Vease Function)	
* function: Función. Conjunto de instrucciones o acciones que puede ser reutilizado o invocado desdecualquier parte
* Contexto: Espacio en memoria que almacena todas las variables de las funciones, esta se libera cuando la función termina
* Closures: Funciones internas que manejan variables independientes 
* Hoisting: (Elevación) No importa el lungar donde se haya definido la variable dentro de la función, el intérprete js la eleva y la pone al comienzo de su contexto
* innerHTML: Sirve para acceder al contenido de un objeto DOM y modificarlo con un nuevo contenido
* append: Sirve para modificar la estructura html
*****::::: Tipos :::::*****
* Números: Números enteros o decimales
	- var num = 40.1 / num = 40
* Booleanos: Verdadedor o falso
	- var switch = false;
* Cadenas de caracteres: String
	- var string = "Hola Luifo"
* Vectores: Serie de valores de un mismo tipo almacenados en una posición específica (Array) 
	- var vector=[3,12,35,6,9,16,26,40,27,1];

* Matrix: Vectores de 2 dimensiones que almacena datos del mismo tipo en una posición específica (X,Y)	
	Obtener fila completa: matriz[0];
	Obtener un dato en concreto: matriz[0][1] (Fila,Columna)
	
* Objetos

*****::::: Sintaxis :::::*****
- Declarar función:
	function nombreFuncion(){
		acción a ejecutar
	}
- Comentarios de línea ( // )
	// var a,b,c
- Comentarios de bloque ( /* ….. */ )
	/* var a,b,c
		a=2
		b=3*/
		
*****::::: IMPORTANTE :::::*****
JavaScript no reconoce los campos CSS que llevan "-", por lo que se debe copiar en camlle Case y sin espacios
	CSS: flex-flow - JavaScript: FlexFlow
	
*****::::: MODIFICAR CÓDIGO :::::*****
- innerHTML
	document.getElementsByTagName("h5")[1].innerHTML = "Selecciona tu animal favorito y tus postres preferidos.";
	
*****::::: Eventos :::::*****
::De teclado::
	- Keypress: Cuando se presiona una tecla
	- keydown: Cuando se mantiene presionada una tecla
	- keyup: Cuando se deja de presionar una tecla
::De mouse::
	- onclick: Cuando se da click
		document.getElementById("astronauta").onclick=cambioFotoAstronauta;
	- ondblclick: Cuando se da docle click
		document.getElementById("extraterrestre").ondblclick=cambioFotoExtraterrestre;
	- onmouseover: Cuando el mouse entra en un objeto DOM (pasa por encima de algo)
		document.getElementById("planetas").onmouseover=cambioFotosPlatenas;
	- onmouseout: Cuando el mouse sale en un objeto DOM (Deja de pasar dobre este)
		document.getElementById("nave_espacial").onmouseout=cambioFotoNave;

::Otros::
	- onchange: Cuando un objeto DOM cambia alguno de sus atributos
	- onload: Cuando termina de cargar el objeto DOM
	- onfocus: Cuando un objeto DOM está activado (Normalmente para input, select)
	- onblur: Cuando un objeto pierde el foco